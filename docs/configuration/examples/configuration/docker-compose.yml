volumes:
  prometheus_data: {}


services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus

      # 1. <scrape_config>
      #- ./prometheusScrapeConfigs.yml:/etc/prometheus/prometheus.yml

      # 1.0   job_name
      #- ./prometheusJobName.yml:/etc/prometheus/prometheus.yml

      # 1.1   scrape_interval
      #- ./prometheusScrapeConfigScrapeInterval.yml:/etc/prometheus/prometheus.yml

      # 1.2   scrape_timeout
      #- ./prometheusScrapeConfigScrapeTimeout.yml:/etc/prometheus/prometheus.yml

      # 1.3   scrape_protocols
      #- ./prometheusScrapeConfigScrapeProtocols.yml:/etc/prometheus/prometheus.yml

      # 1.4   fallback_scrape_protocol
      #- ./prometheusScrapeConfigFallbackScrapeProtocol.yml:/etc/prometheus/prometheus.yml

      # 1.5   1! job / 1 scrape configuration
      #- ./prometheusScrapeConfigOneUniqueJob.yml:/etc/prometheus/prometheusOneUniqueJob.yml

      # 1.6  >1 target groups / 1 job
      #- ./prometheusScrapeConfigSeveralTargetGroupsPerJob.yml:/etc/prometheus/prometheus.yml

      # 1.7 file service discovery
      #- ./prometheusFileServiceDiscovery.yml:/etc/prometheus/prometheus.yml
      #- ./targets:/etc/prometheus/targets

      # 1.8 HTTP service discovery
      #- ./prometheusHTTPServiceDiscovery.yml:/etc/prometheus/prometheus.yml

      # 1.9 metrics_path
      #- ./prometheusScrapeConfigMetricsPath.yml:/etc/prometheus/prometheus.yml

      # 1.10 scrape_failure_log_file
      - ./prometheusScrapeConfigFailureLogFile.yml:/etc/prometheus/prometheus.yml

    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'

  # Nginx
  app1:
    image: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx-status.conf:/etc/nginx/nginx.conf

  app2:
    image: nginx
    ports:
      - "8081:80"
    volumes:
      - ./nginx-status.conf:/etc/nginx/nginx.conf

  app3:
    image: nginx
    ports:
      - "8082:80"
    volumes:
      - ./nginx-status.conf:/etc/nginx/nginx.conf

  # Nginx Exporter
  nginx-exporter-1:
    image: nginx/nginx-prometheus-exporter:latest
    ports:
      - "9113:9113"
    command:
      - '-nginx.scrape-uri=http://app1:80/nginx_status'

  nginx-exporter-2:
    image: nginx/nginx-prometheus-exporter:latest
    ports:
      - "9114:9113"
    command:
      - '-nginx.scrape-uri=http://app2:80/nginx_status'

  nginx-exporter-3:
    image: nginx/nginx-prometheus-exporter:latest
    ports:
      - "9115:9113"
    command:
      - '-nginx.scrape-uri=http://app3:80/nginx_status'

  # Spring Boot con Actuator
  spring-app:
    image: dancer13/gs-spring-boot-docker-6
    ports:
      - "8084:8080"
    environment:
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics,prometheus
      - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_ENDPOINT_METRICS_ENABLED=true
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
